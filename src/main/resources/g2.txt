program declarationList declaration identifierList primitiveType arrayDeclaration type statement assignStatement inputOutputStatement conditionalStructStatement ifSimpleStatement ifStatement elseStatementChain whileStatement condition conditionList relation expressionNumber expression mathExpression arithmeticOperator booleanOperator identifierStart identifierContent identifier letter digit nonZeroDigit
+ - * / =: < <= = > >= && || ! != [] : , () ' char int string while if else end read print def ret for true false a b c d e f g h i j k l m n o p q r s t u v w x y z A B C D E F G H I J K L M N O P Q R S T U V W X Y Z 0 1 2 3 4 5 6 7 8 9 _
program -> statement program
program -> epsilon
declarationList ->  declaration declarationList
declarationList -> epsilon 
declaration -> type identifierList
identifierList -> identifier
identifierList -> identifier , identifierList
primitiveType -> bool 
primitiveType -> char 
primitiveType -> int 
primitiveType -> float 
primitiveType -> string
arrayDeclaration -> primitiveType [ positiveNumber ]
type -> primitiveType
type -> arrayDeclaration
statement -> declarationList
statement -> conditionalStructStatement
statement -> assignStatement 
statement -> inputOutputStatement
assignStatement -> identifier = expression
inputOutputStatement -> read 
inputOutputStatement ->  print ( expression )
conditionalStructStatement ->  ifStatement 
conditionalStructStatement ->  whileStatement
ifSimpleStatement -> if [ condition ] : statement
ifStatement -> ifSimpleStatement elseStatementChain end
elseStatementChain -> else statement elseStatementChain
elseStatementChain -> epsilon
whileStatement -> while [ condition ] : statement end
condition -> expression relation expression
condition -> ( expression relation expression )
condition -> ! condition
conditionList -> condition booleanOperator conditionList
conditionList -> epsilon
relation -> < 
relation ->  <= 
relation ->  == 
relation ->  != 
relation ->  >= 
relation ->  >
expressionNumber -> identifier
expressionNumber -> number
expression -> expressionNumber
expression -> stringTerminal
expression -> mathExpression
mathExpression -> expressionNumber
mathExpression -> mathExpression arithmeticOperator mathExpression
mathExpression -> ( mathExpression arithmeticOperator mathExpression )
arithmeticOperator -> +
arithmeticOperator -> -
arithmeticOperator -> *
arithmeticOperator -> /
booleanOperator -> &&
booleanOperator -> ||
identifierStart -> letter
identifierStart -> _
identifierContent -> letter identifierContent
identifierContent -> digit identifierContent
identifierContent -> _ identifierContent
identifierContent -> epsilon
identifier -> identifierStart identifierContent
letter -> A
letter -> B
letter -> C
letter -> D
letter -> E
letter -> F
letter -> G
letter -> H
letter -> I
letter -> J
letter -> K
letter -> L
letter -> M
letter -> N
letter -> O
letter -> P
letter -> Q
letter -> R
letter -> S
letter -> T
letter -> U
letter -> V
letter -> W
letter -> X
letter -> Y
letter -> Z
letter -> a
letter -> b
letter -> c
letter -> d
letter -> e
letter -> f
letter -> g
letter -> h
letter -> i
letter -> j
letter -> k
letter -> l
letter -> m
letter -> n
letter -> o
letter -> p
letter -> q
letter -> r
letter -> s
letter -> t
letter -> u
letter -> v
letter -> w
letter -> x
letter -> y
letter -> z
digit -> 0
digit -> 1
digit -> 2
digit -> 3
digit -> 4
digit -> 5
digit -> 6
digit -> 7
digit -> 8
digit -> 9
nonZeroDigit -> 1
nonZeroDigit -> 2
nonZeroDigit -> 3
nonZeroDigit -> 4
nonZeroDigit -> 5
nonZeroDigit -> 6
nonZeroDigit -> 7
nonZeroDigit -> 8
nonZeroDigit -> 9

